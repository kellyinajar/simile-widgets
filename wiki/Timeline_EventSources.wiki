#summary Information about Event Sources including XML, JSON and SPARQL formats

= Event Source =

Timelines can be populated from different types of data source formats.  For more information about data loading check out [Timeline_LoadEventsDynamically loading events dynamically].

 * XML format
 * JSON format
 * SPARQL [http://www.wasab.dk/morten/2006/07/sparql-timeline/ more info]

An [Timeline_EventSourceClass Event Source] controls the loading of data sources into a timeline.

= Data attributes and data formats =
There is only one underlying meaning of Timeline data attributes. But the data attributes are arranged slightly differently in the different data transport formats. Each format's adapter reads the incoming data and stores it in the Timeline. For example, in the XML format, the events are a series of elements under the root element. In JSON, the root hash has an _events_ array, whose order is not important. In the two sections below, the data attributes are described. The placement of the attributes is described in the XML and JSON Data Formats sections.

== Which Data Format? ==
If another department will be creating the data file for you, your choices may be limited. For example, XML may be the preferred data exchange format for your organization. If you have more control over the data source, you may wish to try the JSON format with calls to the Date object. This format will give you the fastest load times. You can also write a Javascript adapter (similar to the existing XML, JSON and SPARCL adapters) to directly interpret a different data format. 

== Timeline data attributes ==
 * wiki-url - Base url used to gin up url's for each event; by appending the wiki-section and the event's title; often a MediaWiki wiki URL 
 * wiki-section - MediaWiki wiki section

== Event data attributes ==
Defaults are used if an event does not specify an attribute value. start or latestStart are required.

 * start - in full date format (e.g. "May 20 1961 00:00:00 GMT-0600") Note, the JSON format can use a JS Date method call to speed loading. See [Timeline_EventSourceJSON_jsDate use_js_Date_objects]
 * latestStart - for imprecise beginnings - same date format as start
 * earliestEnd - for imprecise ends - same date format as start
 * end - same date format as start
 * isDuration - "true" or "false". Only applies to events with start/end times.
   * *true* the event will be drawn as a blue dot icon (default) with a pale blue bar. The bar is the default color (or _color attribute_ color), with opacity set to 20. To change the opacity, change the theme's instant: {impreciseOpacity:  20} value. Maximum 100.
   * *false or missing* event will be drawn as a dark blue bar. The bar color is set with the _color attribute_. No icon. Default color is #58A0DC
 * title - text title that goes next to the bar in the timeline. Also shown in the bubble.
 * image - url to an image that will be displayed in the bubble
 * link - url. The bubble's title text be a hyper-link to this address.
 * icon - url. The this image will appear next to the title text in the timeline if (no end date) or (isDuration = true). If a start and end date are supplied, and isDuration is false, the icon is not shown.
 * color - color of the text and bar (duration events) to display in the timeline. If the event has isDuration = true, then the bar's opacity will be applied (default 20%). See isDuration, above.
 * textColor - color of the label text on the timeline. If not set, then the _color property_ will be used.
 * barImage and barRepeat Sets the background image and repeat style for the event's bar on the Timeline. Overrides the color setting for the bar. Repeat style should be one of {repeat | repeat-x | repeat-y}, repeat is the default. See the Cubism example for a demonstration. 
 * hoverText - additional event information shown when mouse is hovered over the Timeline bar or label. Uses the html _title_ property. Looks like a tooltip. Plain text only. See the cubism example.
 * classname - The event's Timeline label's div will be set to this classname, instead of the default, _timeline-event-label_
 * description - will be displayed inside the bubble with the event's title and image.
   * XML Format: the description is stored as the text content of the event element (see below). Note: the XML standard requires that an element's text content must be escaped/formatted HTML.
   * JSON Format: the description key of the event hash

Notes:
 * url's can be absolute or relative. The base address for relative urls is the directory of the html file that includes the Timeline library. 


== XML Data Format ==
The XML format used for Timeline includes the above attributes in the following format:

Everything is contained within a *`<data>`* element.  The *`<data>`* element can have the Timeline attributes listed above:
 * wiki-url 
 * wiki-section

The data element contains one or more child elements of type *`<event>`*, the order is not significant.  

Each *`<event>`* element can have the attributes listed above:
 * start
 * latestStart
 * earliestEnd
 * end
 * isDuration
 * title
 * image
 * link
 * icon
 * color
 * textColor
 * The _text content_ of the event element is the event's _description._ The information must be escaped/formatted HTML. Note in the example below that <i> is encoded as &lt;i&gt;

The xml document must be served with a content-type that the browser thinks is xml: "text/xml, application/xml or ends in +xml" (per [http://www.w3.org/TR/XMLHttpRequest/#xml-response-entity-body the XMLHttpRequest spec]). If it's not, you could get this cryptic error, which I include here as search bait:

TypeError: xml has no properties "XmlHttp: Error handling onReadyStateChange"
\[Exception... "'XmlHttp: Error handling onReadyStateChange' when calling method: \[nsIOnReadyStateChangeHandler::handleEvent]" nsresult: "0x8057001e (NS_ERROR_XPC_JS_THREW_STRING)" location: "<unknown>" data: no]
fDone(XMLHttpRequest readyState=4 status=200)timeplot-bundle.j... (line 177)
_onReadyStateChange(XMLHttpRequest readyState=4 status=200, function(), function())simile-ajax-bundl... (line 2429)
onreadystatechange()

=== XML Examples ===

{{{
<data 
  wiki-url="http://simile.mit.edu/shelf/" 
  wiki-section="Simile JFK Timeline">
    <event 
       start="Sat May 20 1961 00:00:00 GMT-0600" 
       title="'Bay of Pigs' Invasion">
    </event>
    <event 
       start="Wed May 01 1963 00:00:00 GMT-0600" 
       end="Sat Jun 01 1963 00:00:00 GMT-0600" 
       isDuration="true" 
       title="Oswald moves to New Orleans">
         Oswald moves to New Orleans, and finds employment at the William <!-- The event's description -->
         B. Riley Coffee Company. &lt;i&gt;ref. Treachery in Dallas, p 320&lt;/i&gt;
    </event>
    <event>
      ...
    </event>
</data>
}}}

== JSON Data Format ==

The JSON format used for Timeline includes the above attributes in the following format:

Everything is contained in a single anonymous base hash *`{}`* The base hash can include the Timeline attributes listed above as key : value pairs:
 * wiki-url 
 * wiki-section
 
The base hash also contains the key _events_. Its value is an array of _event_ hash elements. The event elements can be in any order. Each event hash can include the event attributes listed above as key : value pairs

Each event element can have the following attributes:
 * start
 * latestStart
 * earliestEnd
 * end
 * isDuration
 * title
 * description
 * image
 * link
 * icon
 * color
 * textColor
 * description 

As noted in the Event attributes section above, the JSON data format will accept references to the Javascript Date object as an alternative to date strings. 

=== JSON Examples ===

{{{
{ 
  'wiki-url':"http://simile.mit.edu/shelf/", 
  'wiki-section':"Simile JFK Timeline", 
  'dateTimeFormat': 'iso8601',
  'events': [
    {
       'start':"Sat May 20 1961 00:00:00 GMT-0600",
       'title':"'Bay of Pigs' Invasion",
     }, {
       'start':"Wed May 01 1963 00:00:00 GMT-0600" ,
       'end':"Sat Jun 01 1963 00:00:00 GMT-0600" ,
       'isDuration':"true" ,
       'title':"Oswald moves to New Orleans",
       'description':"Oswald moves to New Orleans, and finds employment at the William B. Riley Coffee Company. <i>ref. Treachery in Dallas, p 320</i>",
     }, {
      ...
     } ]
}

}}}